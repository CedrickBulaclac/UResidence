@model UResidence.Owner

@{ 

    ViewBag.Title = "AdminView";
    if (Convert.ToInt32(Session["Level"]) == 1)
    {
        Layout = "/Views/Layout/BossManagerLayout.cshtml";
    }
    else if (Convert.ToInt32(Session["Level"]) == 0)
    {
        Layout = "/Views/Layout/SuperAdminLayout.cshtml";
    }
    else
    {
        Layout = "/Views/Layout/AdminLayout.cshtml";
    }
}



<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <style>

        .col-25 {
            float: left;
            width: 25%;
            margin-top: 6px;
        }


        .col-75 {
            float: left;
            width: 75%;
            margin-top: 6px;
        }

        label {
            padding: 12px 12px 12px 0;
            display: inline-block;
        }

        .row:after {
            content: "";
            display: table;
            clear: both;
        }

        .button {
            padding: 15px 25px;
            font-size: 15px;
            text-align: center;
            cursor: pointer;
            outline: none;
            color: #fff;
            background-color: #18ac6f;
            border: none;
            border-radius: 5px;
        }



            .button:hover {
                background-color: #46bc8b;
            }

        /*.containerAdmin {
            padding-left: 150px;
        }*/
    </style>
</head>

<body>

    <br />
    <br />
    <br />
    <br />
    <br />
    <br />

    <div class="containerAdmin">



        @using (Html.BeginForm("OwnerEdit", "Owner", FormMethod.Post))
        {
            @Html.AntiForgeryToken()



		<div class="form-horizontal">



			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Id)
			@Html.HiddenFor(model => model.LoginId)


			<div class="container">


				<div class="panel panel-collapse">
					<div class="panel-heading" style="background-color:  #1C2331">
						<font color="white"> <h3 class="panel-title"> Update Owner Information </h3></font>
					</div>



					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="First Name">First Name :</label>

							<div class="col-sm-6">
								@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
								@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })


							</div>
						</div>
					</div>



					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Middle Name">Middle Name :</label>

							<div class="col-sm-6">
								@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
								@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })

							</div>
						</div>
					</div>





					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Last Name">Last Name :</label>


							<div class="col-sm-6">
								@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
								@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })


							</div>
						</div>
					</div>




					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Bdate">Birthdate :</label>


							<div class="col-sm-6">
								@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
								@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

							</div>
						</div>
					</div>






					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Cel">Cellphone no. :</label>



							<div class="col-sm-6">
								@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

							</div>
						</div>
					</div>






					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Email">Email Address :</label>



							<div class="col-sm-6">
								@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
								@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

							</div>
						</div>
					</div>






					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Bldg no.">Building No. :</label>



							<div class="col-sm-6">
								@Html.DropDownListFor(model => model.BldgNo, new List<SelectListItem>
											 {
											   new SelectListItem() {Text = "1A", Value="1A"},
																			 new SelectListItem() {Text = "1B", Value="1B"},
																			 new SelectListItem() {Text = "1C", Value="1C"},
																			 new SelectListItem() {Text = "2A", Value="2A"},
																			 new SelectListItem() {Text = "2B", Value="2B"},
																			 new SelectListItem() {Text = "2C", Value="2C"},
											  }, new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.BldgNo, "", new { @class = "text-danger" })
								@Html.ValidationMessageFor(model => model.BldgNo, "", new { @class = "text-danger" })

							</div>
						</div>
					</div>








					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4" for="Unit no.">Unit No. :</label>



							<div class="col-sm-6">
								@Html.EditorFor(model => model.UnitNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
								@Html.ValidationMessageFor(model => model.UnitNo, "", new { @class = "text-danger" })

							</div>
						</div>
					</div>







					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4">Registration Form :</label>



							<div class="col-sm-6">
								<button type="button" class="btn btn-info" id="btnUpdateImage1" name="btnUpdateImage1" data-dismiss="modal">Insert Image</button>

							</div>
						</div>
					</div>




					<div class="container">
						<div class="modal fade" id="updateImageModal1" role="dialog">
							<div class="modal-dialog">
								<div class="modal-content">
									<div class="modal-header">
										<button type="button" class="close" data-dismiss="modal">&times;</button>
									</div>
									<div class="modal-body">
										<label>Registration Form: </label><input type="file" id="image1" name="image1" />
									</div>
									<div class="modal-footer">
										<button type="button" class="btn btn-success" id="btnUpdate" name="btnUpdate" onclick="UpdateImage1(@Model.Id)">Update</button>
										<button type="button" class="btn btn-danger" id="btnCloseImage" name="btnCloseImage" data-dismiss="modal">Close</button>
									</div>
								</div>
							</div>
						</div>
					</div>



					<input type="submit" value="Save Changes" class="button" />
					<a href="@Url.Action("OwnerView","Owner")" class="button">Cancel</a>
				</div>
			</div>
		</div>

        }

    </div>
</body>
</html>

<script>

    function UpdateImage1(id) {
        var tid = id;

        var file1 = $("#image1").get(0).files;
        var data = new FormData();
        data.append("Image1", file1[0]);
        data.append("Id", tid);

        $.ajax({
            type: "POST",
            url: "/Owner/UpdateImageForm/",
            data: data,
            contentType: false,
            processData: false,
            success: function (data) {
                if (data == true) {
                    alert('Success');
                    window.location.href = window.location.href + "?rnd=" + Math.random()

                }
            },
            error: function (error) {
                alert(error);
            }
        });
	}


	//$("form").submit(function (e) {
	//	var today = new Date();
	//	var bdate = document.getElementById('Bdate').value
	//	var date1 = new Date(bdate);
	//	var age = today.getFullYear() - date1.getFullYear();
	//	var m = today.getMonth() + 1 - date1.getMonth() + 1;
	//	var d = today.getDate() - date1.getDate();

	//	if (age < 18 || m < 0) {
	//		alert("18 Years and above only");
	//		e.preventDefault();
	//	}
	//});

    $('#btnUpdateImage1').click(function () {

        $('#updateImageModal1').modal();
    }
    );
</script>
