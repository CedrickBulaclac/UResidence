@model UResidence.Admin

@{
	ViewBag.Title = "AdminView";
	if (Convert.ToInt32(Session["Level"]) == 1)
	{
		Layout = "/Views/Layout/BossManagerLayout.cshtml";
	}
	else if (Convert.ToInt32(Session["Level"]) == 0)
	{
		Layout = "/Views/Layout/SuperAdminLayout.cshtml";
	}
	else
	{
		Layout = "/Views/Layout/AdminLayout.cshtml";
	}



	List<SelectListItem> listItemsRole = new List<SelectListItem>();
	listItemsRole.Add(new SelectListItem
	{
		Text = "--Select Type of User--",
		Value = "GG"
	});
	listItemsRole.Add(new SelectListItem
	{
		Text = "Cashier",
		Value = "3"
	});
	listItemsRole.Add(new SelectListItem
	{
		Text = "Finance",
		Value = "2"
	});
	listItemsRole.Add(new SelectListItem
	{
		Text = "Registration",
		Value = "5"
	});
	listItemsRole.Add(new SelectListItem
	{
		Text = "Security Guard",
		Value = "6"
	});
	listItemsRole.Add(new SelectListItem
	{
		Text = "Reservation",
		Value = "4"
	});
	if (Convert.ToInt32(Session["Level"]) == 0)
	{
		listItemsRole.Add(new SelectListItem
		{
			Text = "Boss Manager",
			Value = "1"
		});
	}
}



<head>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">

	<link rel="stylesheet" href="https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css" />
	<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />



</head>
<div class="container">
	<div class="modal fade" id="seemoreModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <label>Complete Information</label>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
				<div class="modal-body" style="max-height:calc(100v-212px); overflow-y:auto;">

					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4"> Name:  </label>
							<label class="col-sm-7" id="Name"></label>
						</div>
					</div>


					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Birthdate:
							</label>
							<label class="col-sm-7" id="Birthdate"></label>
						</div>
					</div>


					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Address:
							</label>
							<label class="col-sm-7" id="Address"></label>
						</div>
					</div>



					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Cellphone No:
							</label>
							<label class="col-sm-7" id="CellphoneNo"></label>
						</div>
					</div>



					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Email Address:
							</label>
							<label class="col-sm-7" id="EmailAddress"></label>
						</div>
					</div>


					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Position:
							</label>
							<label class="col-sm-7" id="Level"></label>
						</div>
					</div>

					<br />   <br />   <br />

					<div class="col-sm-12">
						<div class="form-group">
							<div class="col-sm-6"><b>Emergency Contact Information</b></div>
						</div>
					</div>


					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Number:
							</label>
							<label class="col-sm-7" id="eno"></label>
						</div>
					</div>


					<div class="col-sm-12">
						<div class="form-group">
							<label class="col-sm-4">
								Name:
							</label>
							<label class="col-sm-7" id="ename"></label>
						</div>
					</div>


					<div class="col-sm-12">
						<div class="form-group">

							<label class="col-sm-4">
								Address:

							</label>
							<label class="col-sm-7" id="eaddress"></label>
						</div>
					</div>


				</div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" id="btnClose" name="btnClose" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
	</div>
</div>

@using (Html.BeginForm("Registration", "Admin", FormMethod.Post))
{
	@Html.AntiForgeryToken()
	<div class="container">
		<div class="modal fade" id="AddModal" role="dialog">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header" style="background-color:#43a047">

						<font color="white">
							<button type="button" class="close" data-dismiss="modal"> <font color="white">  &times; </font></button>
							<div class="text-center" style="font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif ; font-size:33px"> ADD NEW EMPLOYEE </div>
						</font>
					</div>
					<div class="modal-body form-horizontal" style="max-height:calc(100v-212px); overflow-y:auto;">
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						@if ((Convert.ToInt32(Session["Level"]) == 1) || (Convert.ToInt32(Session["Level"]) == 0))
						{




							<div class="col-sm-12">
								<div class="form-group">
									<label class="col-sm-4" for="First Name"> <b>First Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Middle Name"><b>Middle Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Last Name"><b>Last Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Bdate"><b>Birthdate : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
										@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>


							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="address"><b>Address : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Cel"><b>Cellphone No. : </b> </label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Email"><b>Email Address : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="typeofadmin"> <b>Type of Employee: </b></label>



									<div class="col-sm-7">
										<select class="form-control" name="typeadmin" id="typeadmin" onchange="updateCheckBox(this)">
											<option value="GG">--Select Type of User--</option>
											<option value="3">Cashier</option>
											<option value="2">Finance</option>
											<option value="5">Registration</option>
											<option value="4">Reservation</option>
											<option value="6">Security Guard</option>
											@if (Convert.ToInt32(Session["Level"]) == 0)
											{
												<option value="1">Boss Manager</option>
											}
										</select>

									</div>
								</div>
							</div>

							<b><p>In case of Emergency Notify: </p></b>
							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="E Name"><b>Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EName, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>



							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Last Name"><b> Address: </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EAddress, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="ENo"><b>Number : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.ENo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.ENo, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">
									<h2><label class="col-sm-4" for="Amenity Name">Module/s Included :</label></h2>


									<br />


									<div class="col-sm-7">
										@Html.CheckBoxFor(model => model.ReservationModule, new { htmlAttributes = new { @required = "required" } }) <b>Reservation Module</b>
										<br />
										@Html.CheckBoxFor(model => model.ReversalModule, new { htmlAttributes = new { @required = "required" } }) <b>Reversal Module</b>
										<br />
										@Html.CheckBoxFor(model => model.PaymentModule, new { htmlAttributes = new { @required = "required" } }) <b>Payment Module</b>
										<br />
										@Html.CheckBoxFor(model => model.LogBookModule, new { htmlAttributes = new { @required = "required" } }) <b>LogBook Module</b>
										<br />
										@Html.CheckBoxFor(model => model.RegistrationModule, new { htmlAttributes = new { @required = "required" } }) <b>Registration Module</b>
										<br />
										<br />

									</div>
								</div>
							</div>
						}
						else
						{
							<div class="col-sm-12">
								<div class="form-group">
									<label class="col-sm-4" for="First Name"> <b>First Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Middle Name"><b>Middle Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Last Name"><b>Last Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Bdate"><b>Birthdate : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
										@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="address"><b>Address : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>



							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Cel"><b>Cellphone No. : </b> </label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>
		
							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Email"><b>Email Address : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="typeofadmin">Type of Employee:</label>



									<div class="col-sm-7">
										<select class="form-control" name="typeadmin" id="typeadmin" onchange="updateCheckBox(this)" required>
											<option value="GG">--Select Type of User--</option>
											<option value="3">Cashier</option>
											<option value="2">Finance</option>
											<option value="5">Registration</option>
											<option value="4">Reservation</option>
											<option value="6">Security Guard</option>
										</select>

									</div>
								</div>
							</div>



							<b><p>In case of Emergency Notify: </p></b>
							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="E Name"><b> Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EName, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Last Name"><b> Address: </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EAddress, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="ENo"><b>Contact Number : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.ENo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.ENo, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>


							@Html.CheckBoxFor(model => model.ReservationModule, new { @hidden = true, htmlAttributes = new { @required = "required" } })

							@Html.CheckBoxFor(model => model.ReversalModule, new { @hidden = true, htmlAttributes = new { @required = "required" } })

							@Html.CheckBoxFor(model => model.PaymentModule, new { @hidden = true, htmlAttributes = new { @required = "required" } })

							@Html.CheckBoxFor(model => model.LogBookModule, new { @hidden = true, htmlAttributes = new { @required = "required" } })

							@Html.CheckBoxFor(model => model.RegistrationModule, new { @hidden = true, htmlAttributes = new { @required = "required" } })

						}
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-success" id="btnAdd" name="btnAdd" onclick="Add()">Save</button>
						<button type="button" class="btn btn-danger" id="btnClose" name="btnClose" data-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}
@if (Model != null)
{
	using (Html.BeginForm("AdminView", "Admin", FormMethod.Post))
	{
		<div class="modal fade" id="UpdateModal" role="dialog">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header" style="background-color:#43a047">

						<font color="white">
							<button type="button" class="close" data-dismiss="modal"> <font color="white">  &times; </font></button>
							<div class="text-center" style="font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif ; font-size:33px"> UPDATE EMPLOYEE INFORMATION </div>
						</font>
					</div>
					<div class="modal-body form-horizontal" style="max-height:calc(100v-212px); overflow-y:auto;">
						@Html.HiddenFor(model => model.LoginId)
						@if (Convert.ToInt32(Session["Level"]) == 1)
						{
							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="First Name">First Name :</label>

									<div class="col-sm-6">
										@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })


									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Middle Name">Middle Name :</label>

									<div class="col-sm-6">
										@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Last Name">Last Name :</label>


									<div class="col-sm-6">
										@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })


									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Bdate">Birthdate :</label>


									<div class="col-sm-6">
										@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
										@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>


							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="address"><b>Address : </b></label>


									<div class="col-sm-6">
										@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>


							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Cel">Cellphone no. :</label>



									<div class="col-sm-6">
										@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
										@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Email">Email Address :</label>



									<div class="col-sm-6">
										@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>


							<b><p>In case of Emergency Notify: </p></b>



							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="E Name"><b>Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EName, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>



							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Last Name"><b>Address: </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EAddress, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="ENo"><b>Number : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.ENo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.ENo, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="typeofadmin"> <b>Type of Employee: </b></label>



									<div class="col-sm-7">
										@Html.DropDownListFor(model => model.Role, listItemsRole, new { @class = "form-control", @name = "typeadmin", @id = "typeadmin", @onchange = "updateCheckBoxRole(this)" })
										

									</div>
								</div>
							</div>


							<div class="col-sm-12">
								<div class="form-group">
									<h2>  <label class="col-sm-4" for="Amenity Name">Module/s Included :</label> </h2>


									<div class="col-sm-8">
										@Html.CheckBoxFor(model => model.ReservationModule, new { @id = "reservation" })
										@Html.ValidationMessageFor(model => model.ReservationModule, "", new { @class = "text-danger" }) <b>Reservation Module</b>
										<br />
										@Html.CheckBoxFor(model => model.ReversalModule, new { @id = "reversal" })
										@Html.ValidationMessageFor(model => model.ReversalModule, "", new { @class = "text-danger" }) <b>Reversal Module</b>
										<br />
										@Html.CheckBoxFor(model => model.PaymentModule, new { @id = "payment" })
										@Html.ValidationMessageFor(model => model.PaymentModule, "", new { @class = "text-danger" }) <b>Payment Module</b>
										<br />
										@Html.CheckBoxFor(model => model.LogBookModule, new { @id = "logbook" })
										@Html.ValidationMessageFor(model => model.LogBookModule, "", new { @class = "text-danger" }) <b>LogBook Module</b>
										<br />
										@Html.CheckBoxFor(model => model.RegistrationModule, new { @id = "registration" })
										@Html.ValidationMessageFor(model => model.RegistrationModule, "", new { @class = "text-danger" }) <b>Registration Module</b>

									</div>
								</div>
							</div>

							@Html.HiddenFor(model => model.Role)

						}
						else
						{
							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="First Name">First Name :</label>

									<div class="col-sm-6">
										@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })


									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Middle Name">Middle Name :</label>

									<div class="col-sm-6">
										@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Last Name">Last Name :</label>


									<div class="col-sm-6">
										@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })


									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Bdate">Birthdate :</label>


									<div class="col-sm-6">
										@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="address"><b>Address : </b></label>


									<div class="col-sm-6">
										@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>


							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Cel">Cellphone no. :</label>



									<div class="col-sm-6">
										@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
										@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="Email">Email Address :</label>



									<div class="col-sm-6">
										@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>

							<b><p>In case of Emergency Notify: </p></b>



							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="E Name"><b> Name : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EName, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>



							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="Last Name"><b> Address: </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.EAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.EAddress, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">

								<div class="form-group">
									<label class="col-sm-4" for="ENo"><b>Number : </b></label>


									<div class="col-sm-7">
										@Html.EditorFor(model => model.ENo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
										@Html.ValidationMessageFor(model => model.ENo, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">

									<label class="col-sm-4" for="typeofadmin"> <b>Type of Employee: </b></label>



									<div class="col-sm-7">
									
										@Html.DropDownListFor(model => model.Role, listItemsRole, new { @class = "form-control", @name = "typeadmin", @id = "typeadmin", @onchange = "updateCheckBoxRole(this)" })
									</div>
								</div>
							</div>

							<div class="col-sm-12">
								<div class="form-group">



									<div class="col-sm-8">
										@Html.HiddenFor(model => model.ReservationModule , new { @id = "reservation" })
										@Html.ValidationMessageFor(model => model.ReservationModule, "", new { @class = "text-danger" })
										<br />
										@Html.HiddenFor(model => model.ReversalModule, new { @id = "reversal" })
										@Html.ValidationMessageFor(model => model.ReversalModule, "", new { @class = "text-danger" })
										<br />
										@Html.HiddenFor(model => model.PaymentModule , new { @id = "payment" })
										@Html.ValidationMessageFor(model => model.PaymentModule, "", new { @class = "text-danger" })
										<br />
										@Html.HiddenFor(model => model.LogBookModule , new { @id = "logbook" })
										@Html.ValidationMessageFor(model => model.LogBookModule, "", new { @class = "text-danger" })
										<br />
										@Html.HiddenFor(model => model.RegistrationModule , new { @id = "registration" })
										@Html.ValidationMessageFor(model => model.RegistrationModule, "", new { @class = "text-danger" })

									</div>
								</div>
							</div>
						}
					</div>
					<div class="modal-footer">
						<button type="submit" class="btn btn-success" id="btnAdd" name="btnAdd" onclick="Add()">Save</button>
						<button type="button" class="btn btn-danger" id="btnClose" name="btnClose" data-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>
	}
}
@if (Convert.ToInt32(Session["Level"]) == 1 || Convert.ToInt32(Session["Level"]) == 0)
{

	if (Convert.ToInt32(Session["Level"]) == 1)
	{
		<br /> <br /> <br />
	}
	<div id="content1">


		<br />  <br /> <br />


		<div class="container">
			<div class="col-md-12">

				<div class="panel panel-default">
					<div class="panel-heading" style="background-color:  #1C2331">
						<font color="white"> <h3 class="panel-title"> List of Employees </h3></font>
					</div>

					<div class=" panel-body">
						<div class="table-responsive">

							<table class=" table table-bordered table-striped" id="sample">

								<thead>
									<tr>
										<th>Employee ID</th>
										<th>Full Name</th>
										<th>Birthdate</th>
										<th>Cellphone No</th>
										<th>Email Address</th>
										<th>Position</th>
										<th>Actions</th>
									</tr>
								</thead>

							</table>
						</div>
					</div>
				</div>


				<div class="container">

					<button type="button" id="addbtn" class="btn btn-success">
						ADD NEW EMPLOYEE
					</button>
					<a class="btn btn-default" href="@Url.Action("Download", "Admin")">Download List of Admin</a>
				</div>


			</div>
		</div>
	</div>
	<br />
	<br />
}
else
{
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<div class="container">


		<div class="panel panel-default">
			<div class="panel-heading" style="background-color:  #1C2331">
				<font color="white"> <h3 class="panel-title"> List of Employees </h3></font>
			</div>


			<div class=" panel-body">
				<div class="table-responsive">
					<table class=" table table-bordered table-striped" id="adminData">

						<thead>
							<tr>
								<th>Employee ID</th>
								<th>Full Name</th>
								<th>Birthdate</th>
								<th>Cellphone No</th>
								<th>Email Address</th>
								<th>Position</th>
								<th>Actions</th>
							</tr>
						</thead>
					</table>
				</div>
			</div>
		</div>

		<div class="container">
			<button type="button" id="addbtn" class="btn btn-success">
				ADD NEW EMPLOYEE
			</button>
			<a class="btn btn-default" href="@Url.Action("Download", "Admin")">Download List of Users</a>
		</div>


	</div>
	<br />
	<br />
}




<div id="auerror" class="alert alert-danger collapse">
	<a href="#" class="close" data-dismiss="alert">&times;</a>
	<strong>Error!</strong> There is a problem updating the Admin
</div>
<div id="ausuccess" class="alert alert-success collapse">
	<strong>Success!</strong> You have successfully updated the Admin
</div>


<div id="aerror" class="alert alert-danger collapse">
	<a href="#" class="close" data-dismiss="alert">&times;</a>
	<strong>Error!</strong> There is a problem deleting the Admin
</div>
<div id="asuccess" class="alert alert-success collapse">
	<strong>Success!</strong> You have successfully deleted the Admin
</div>


<div id="aaerror" class="alert alert-danger collapse">
	<a href="#" class="close" data-dismiss="alert">&times;</a>
	<strong>Error!</strong> There is a problem submitting your form
</div>
<div id="aasuccess" class="alert alert-success collapse">
	<strong>Success!</strong> You have successfully added a Admin
</div>


@if (ViewBag.DeleteStatus != null)
{
	if (ViewBag.DeleteStatus == true)
	{

		<script type="text/javascript">
			$(document).ready(function () {

				$('#asuccess').show('fade');

				setTimeout(function () {
					$('#asuccess').hide('fade');
				}, 2000);
			});
		</script>
	}

	else
	{

		<script type="text/javascript">
			$(document).ready(function () {

				$('#aerror').show('fade');

				setTimeout(function () {
					$('#aerror').hide('fade');
				}, 2000);


			});
		</script>
	}
}

@if (ViewBag.UpdateMessage != null)
{
	if (ViewBag.UpdateMessage == true)
	{

		<script type="text/javascript">
			$(document).ready(function () {

				$('#ausuccess').show('fade');

				setTimeout(function () {
					$('#ausuccess').hide('fade');
				}, 2000);


			});
		</script>
	}

	else
	{

		<script type="text/javascript">
			$(document).ready(function () {

				$('#auerror').show('fade');

				setTimeout(function () {
					$('#auerror').hide('fade');
				}, 2000);


			});
		</script>
	}
}

@if (ViewBag.AddMessage != null)
{
	if (ViewBag.AddMessage == true)
	{
		<script type="text/javascript">

			$(document).ready(function () {

				document.forms[0].reset();
				$('#aasuccess').show('fade');

				setTimeout(function () {
					$('#aasuccess').hide('fade');
				}, 2000);

			});
		</script>
	}

	else
	{
		<script type="text/javascript">

			$(document).ready(function () {

				$('#aaerror').show('fade');

				setTimeout(function () {
					$('#aaerror').hide('fade');
				}, 2000);


			});
		</script>

	}

}
@if (ViewBag.Alert != null)
{
	if (ViewBag.Alert == true)
	{
		<script>
			$(document).ready(function () {
				$('#AddModal').modal('show');
			});
		</script>
	}
}
@if (ViewBag.ModalView != null)
{
	if (ViewBag.ModalView == 1)
	{
		<script>
			$('#UpdateModal').modal();
		</script>
	}
	else
	{
		<script>
			$('#UpdateModal').modal("hide");
		</script>
	}
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function () {
        if (parseInt(@ViewBag.Level) >= 2) {
            var table1 = $('#adminData').DataTable({
                "ajax": {
                    "url": '/Admin/GetAdmin',
                    "type": "GET",
                    "datatype": "json",
                },
				"columns": [
					{ "data": "Id", "autowidth": true },
                    { "data": "Fullname", "autowidth": true },
                    { "data": "Bdate", render: function (data, type, announcement) { return announcement.FormattedDate }, "autowidth": true },
                    { "data": "CelNo", "autowidth": true },
                    { "data": "Email", "autowidth": true },
                    { "data": "Role", "autowidth": true },
					{ "data": "Id", "autowidth": true, render: function (data) { return '<button class="btn btn-default" id="seemore" onclick="ViewOther(' + data + ')"><i class="glyphicon glyphicon-eye-open"></i></button><a id="btnUpdate" class="btn btn-primary" href="/Admin/AdminView/' + data + '"><i class="glyphicon glyphicon-edit"></i></a> <a class="btn btn-danger" href="/Admin/Delete/' + data + '"><i class="glyphicon glyphicon-trash"></i> </a>' } }
                ]
            });
        }
        else if(parseInt(@ViewBag.Level) == 1 || parseInt(@ViewBag.Level) ==0) {
            var table1 = $('#sample').DataTable({
                "ajax": {
                    "url": '/Admin/GetAdmin',
                    "type": "GET",
                    "datatype": "json",
                },
				"columns": [
					{ "data": "Id", "autowidth": true },
                    { "data": "Fullname", "autowidth": true },
                    { "data": "Bdate", render: function (data, type, announcement) { return announcement.FormattedDate }, "autowidth": true },
                    { "data": "CelNo", "autowidth": true },
                    { "data": "Email", "autowidth": true },
                    { "data": "Role", "autowidth": true },
					{ "data": "Id", "autowidth": true, render: function (data) { return '<button class="btn btn-default" id="seemore" onclick="ViewOther(' + data + ')"><i class="glyphicon glyphicon-eye-open"></i></button><a id="btnUpdate" class="btn btn-primary" href="/Admin/AdminView/' + data + '"><i class="glyphicon glyphicon-edit"></i></a> <a class="btn btn-danger" href="/Admin/Delete/' + data + '"><i class="glyphicon glyphicon-trash"></i> </a>' } }
                ]
            });
        }
    });


    $(document).ready(function () {
        $('[type="date"]').prop('max', function () {
            return new Date(new Date().getTime() - new Date().getTimezoneOffset() * 60000).toISOString().split("T")[0];
        });
	});



	function ViewOther(id) {
		$('#seemoreModal').modal();
		var data = {
			Id: id
		}
		$.ajax({
			"url": "/Admin/GetAdminS", 
			"type": "GET",
			"data": data,
			"success": function (data) {

				document.getElementById('Level').innerHTML = data.Role;
				document.getElementById('Name').innerHTML = data.Fullname;
				document.getElementById('Birthdate').innerHTML = moment(data.Bdate).format("MMMM DD YYYY");
				document.getElementById('CellphoneNo').innerHTML = data.CelNo;
				document.getElementById('EmailAddress').innerHTML = data.Email;
				document.getElementById('eno').innerHTML = data.ENo;
				document.getElementById('ename').innerHTML = data.EName;
				document.getElementById('eaddress').innerHTML = data.EAddress;
				document.getElementById('Address').innerHTML = data.Address;
			}
		});
	}

	function Set(form) {
		fr = form;
		var fullpath = (fr).toString();
		var filename = fullpath.replace(/^.*[\\\/]/, '');
		var path = "../Content/OwnerImages/" + filename;

		document.getElementById('oform').setAttribute('src', path)

		$('#formModal').modal();
	}


	$("form").submit(function (e) {

			var reservation = document.getElementById("ReservationModule");
			var reversal = document.getElementById("ReversalModule");
			var payment = document.getElementById("PaymentModule");
			var logbook = document.getElementById("LogBookModule");
			var registration = document.getElementById("RegistrationModule");

			var reservation1 = document.getElementById("reservation");
			var reversal1 = document.getElementById("reversal");
			var payment1 = document.getElementById("payment");
			var logbook1 = document.getElementById("logbook");
			var registration1 = document.getElementById("registration");

			reservation.disabled = false;
			reversal.disabled = false;
			payment.disabled = false;
			logbook.disabled = false;
			registration.disabled = false;

			reservation1.disabled = false;
			reversal1.disabled = false;
			payment1.disabled = false;
			logbook1.disabled = false;
			registration1.disabled = false;
	
    });

    function checkanddisable() {
        var reservation = document.getElementById("ReservationModule");
        var reversal = document.getElementById("ReversalModule");
        var payment = document.getElementById("PaymentModule");
        var logbook = document.getElementById("LogBookModule");
        var registration = document.getElementById("RegistrationModule");
        reservation.checked = false;
        reversal.checked = false;
        payment.checked = false;
        logbook.checked = false;
        registration.checked = false;
        reservation.disabled = false;
        reversal.disabled = false;
        payment.disabled = false;
        logbook.disabled = false;
        registration.disabled = false;
    }

	function updateCheckBox(toa) {
        var reservation = document.getElementById("ReservationModule");
        var reversal = document.getElementById("ReversalModule");
        var payment = document.getElementById("PaymentModule");
        var logbook = document.getElementById("LogBookModule");
        var registration = document.getElementById("RegistrationModule");
        if (toa.value == 2) {
			checkanddisable();

            reversal.disabled = true;
            reversal.checked = true;
            payment.disabled = true;
            payment.checked = true;
        }
        else if (toa.value == 5) {
            checkanddisable();

            registration.checked = true;
            registration.disabled = true;
        }
        else if (toa.value == 4) {
            checkanddisable();

            reservation.disabled = true;
            reservation.checked = true;
        }
        else if (toa.value == 6) {
            checkanddisable();
            logbook.disabled = true;
            logbook.checked = true;
        }
        else if (toa.value == 3) {
            checkanddisable();

            payment.disabled = true;
            payment.checked = true;
		}
		else   {
			checkanddisable();
		}
	}


	function checkanddisableRole() {
		var reservation = document.getElementById("reservation");
		var reversal = document.getElementById("reversal");
		var payment = document.getElementById("payment");
		var logbook = document.getElementById("logbook");
		var registration = document.getElementById("registration");
		reservation.checked = false;
		reversal.checked = false;
		payment.checked = false;
		logbook.checked = false;
		registration.checked = false;
		reservation.disabled = false;
		reversal.disabled = false;
		payment.disabled = false;
		logbook.disabled = false;
		registration.disabled = false;
	}




	function updateCheckBoxRole(toa) {
		var reservation = document.getElementById("reservation");
		var reversal = document.getElementById("reversal");
		var payment = document.getElementById("payment");
		var logbook = document.getElementById("logbook");
		var registration = document.getElementById("registration");


		if (toa.value == 2) {
			checkanddisableRole();

			reversal.disabled = true;
			reversal.checked = true;
			payment.disabled = true;
			payment.checked = true;
		}
		else if (toa.value == 5) {
			checkanddisableRole();

			registration.checked = true;
			registration.disabled = true;
		}
		else if (toa.value == 4) {
			checkanddisableRole();

			reservation.disabled = true;
			reservation.checked = true;
		}
		else if (toa.value == 6) {
			checkanddisableRole();
			logbook.disabled = true;
			logbook.checked = true;
		}
		else if (toa.value == 3) {
			checkanddisableRole();

			payment.disabled = true;
			payment.checked = true;
		}
		else {
			checkanddisableRole();
		}
	}


	function Download() {
		$.post("/Admin/Download");
    }
    $('#addbtn').click(function () {

        $('#AddModal').modal();
    }
    );
</script>
