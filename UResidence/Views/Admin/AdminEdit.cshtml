@model UResidence.Admin

@{
	Layout = "/Views/Layout/AdminLayout.cshtml";
	ViewBag.Title = "AdminEdit";
}
@*Scripts for dropdown*@
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

<html>

<head>



	<style>

		.col-25 {
			float: left;
			width: 25%;
			margin-top: 6px;
		}


		.col-75 {
			float: left;
			width: 75%;
			margin-top: 6px;
		}

		label {
			padding: 12px 12px 12px 0;
			display: inline-block;
		}

		.row:after {
			content: "";
			display: table;
			clear: both;
		}

		.button {
			padding: 15px 25px;
			font-size: 15px;
			text-align: center;
			cursor: pointer;
			outline: none;
			color: #fff;
			background-color: #18ac6f;
			border: none;
			border-radius: 5px;
		}



			.button:hover {
				background-color: #46bc8b;
			}

		.containerAdmin {
			padding-left: 150px;
		}
	</style>
</head>

<body>

	<br />
	<br />
	<br />

	<div class="containerAdmin">
		<h2>Admin</h2>
		@using (Html.BeginForm("AdminEdit", "Admin", FormMethod.Post))
		{
			@Html.AntiForgeryToken()





		<div class="form-horizontal">

			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })



			@*<div class="form-group">
			@Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
				@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
			</div>
		</div>*@




			<div class="row">
				<div class="col-25">

					<label for="First Name">First Name :</label>

				</div>

				<div class="col-75">
					@Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
					@Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })


				</div>
			</div>





			@*<div class="form-group">
			@Html.LabelFor(model => model.Mname, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
				@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })
			</div>
		</div>*@


			<div class="row">
				<div class="col-25">

					<label for="Middle Name">Middle Name :</label>

				</div>

				<div class="col-75">
					@Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
					@Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })


				</div>
			</div>



			@*<div class="form-group">
			@Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
				@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
			</div>
		</div>*@



			<div class="row">
				<div class="col-25">

					<label for="Last Name">Last Name :</label>

				</div>

				<div class="col-75">
					@Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
					@Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })


				</div>
			</div>





			@*<div class="form-group">
			@Html.LabelFor(model => model.Bdate, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
				@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })
			</div>
		</div>*@


			<div class="row">
				<div class="col-25">

					<label for="Birth Date">Birth Date :</label>

				</div>

				<div class="col-75">
					@Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
					@Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

				</div>
			</div>




			@*<div class="form-group">
			@Html.LabelFor(model => model.CelNo, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })
			</div>
		</div>*@


			<div class="row">
				<div class="col-25">

					<label for="Cel no.">Cellphone no. :</label>

				</div>

				<div class="col-75">
					@Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

				</div>
			</div>





			@*<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>*@



			<div class="row">
				<div class="col-25">

					<label for="Email">Email Address :</label>

				</div>

				<div class="col-75">
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

				</div>
			</div>


			<div class="row">
				<div class="col-25">
					<h2><label for="Amenity Name">Module/s Included :</label></h2>
				</div>

				<div class="col-75">
				</div>
			</div>

			<div class="row">
				<div class="col-25">
				</div>
				<div class="col-75">
					@Html.EditorFor(model => model.ReservationModule)
					@Html.ValidationMessageFor(model => model.ReservationModule, "", new { @id = "reservation", @name = "reservation", @class = "text-danger" }) <b>Reservation Module</b>
					<br />
					@Html.EditorFor(model => model.ReversalModule)
					@Html.ValidationMessageFor(model => model.ReversalModule, "", new { @id = "reversal", @name = "reversal", @class = "text-danger" }) <b>Reversal Module</b>
					<br />
					@Html.EditorFor(model => model.PaymentModule)
					@Html.ValidationMessageFor(model => model.PaymentModule, "", new { @id = "payment", @name = "payment", @class = "text-danger" }) <b>Payment Module</b>
					<br />
					@Html.EditorFor(model => model.LogBookModule)
					@Html.ValidationMessageFor(model => model.LogBookModule, "", new { @id = "logbook", @name = "logbook", @class = "text-danger" }) <b>LogBook Module</b>
					<br />
					@Html.EditorFor(model => model.RegistrationModule)
					@Html.ValidationMessageFor(model => model.RegistrationModule, "", new { @id = "logbook", @name = "logbook", @class = "text-danger" }) <b>Registration Module</b>
				</div>
				@Html.HiddenFor(model => model.Role)

			</div>




			<input type="submit" value="Save" class="button" />
			<a href="@Url.Action("AdminView","Admin")" class="button">Cancel</a>
		</div>

		}
	</div>
</body>
</html>


<script>

	$("form").submit(function () {
		var reservation = document.getElementById("ReservationModule");
		var reversal = document.getElementById("ReversalModule");
		var payment = document.getElementById("PaymentModule");
		var logbook = document.getElementById("LogBookModule");
		var registration = document.getElementById("RegistrationModule");
		reservation.disabled = false;
		reversal.disabled = false;
		payment.disabled = false;
		logbook.disabled = false;
		registration.disabled = false;
	});

	


	$(document).ready(function () {
		
		var reservation = document.getElementById("ReservationModule");
		var reversal = document.getElementById("ReversalModule");
		var payment = document.getElementById("PaymentModule");
		var logbook = document.getElementById("LogBookModule");
		var registration = document.getElementById("RegistrationModule");
		var toa = document.getElementById("Role").value.toString();

		if (toa == "Finance") {

			reversal.disabled = true;
			reversal.checked = true;
			payment.disabled = true;
			payment.checked = true;
		}

		if (toa == "Registration") {
			registration.disabled = true;
			registration.checked = true;
		}
		else if (toa == "Reservation Admin") {


			reservation.disabled = true;
			reservation.checked = true;
		}
		else if (toa == "Security Guard") {
			logbook.disabled = true;
			logbook.checked = true;
		}
		else if (toa == "OIC Security Guard") {
			logbook.disabled = true;
			logbook.checked = true;
		}
		else if (toa == "Cashier") {
			payment.disabled = true;
			payment.checked = true;
		}


		});

</script>