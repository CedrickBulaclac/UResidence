@model UResidence.Admin

@{
    ViewBag.Title = "AdminView";
    if (Convert.ToInt32(Session["Level"]) == 1)
    {
        Layout = "/Views/Layout/BossManagerLayout.cshtml";
    }
    else if (Convert.ToInt32(Session["Level"]) == 0)
    {
        Layout = "/Views/Layout/SuperAdminLayout.cshtml";
    }
    else
    {
        Layout = "/Views/Layout/AdminLayout.cshtml";
    }
}


<html>

<head>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <style>

        .col-25 {
            float: left;
            width: 25%;
            margin-top: 6px;
        }


        .col-75 {
            float: left;
            width: 75%;
            margin-top: 6px;
        }

        label {
            padding: 12px 12px 12px 0;
            display: inline-block;
        }


        labell {
            /*padding: 12px 12px 12px 0;*/
            display: inline-block;
        }

        .row:after {
            content: "";
            display: table;
            clear: both;
        }

        .button {
            padding: 15px 25px;
            font-size: 15px;
            text-align: center;
            cursor: pointer;
            outline: none;
            color: #fff;
            background-color: #18ac6f;
            border: none;
            border-radius: 5px;
        }



            .button:hover {
                background-color: #46bc8b;
            }
    </style>
</head>

<body>

    <br />
    <br />
    <br />
    <br />
  
   



    @using (Html.BeginForm("AdminEdit", "Admin", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">




            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            @if (Convert.ToInt32(Session["Level"]) == 1)
            {

                <script>
                    $(document).ready(function () {
                        $('#maincontent').empty();
                        $('#maincontent1').empty();
                        $('#containerChart').empty();

                    });</script>



                <div id="content1">
                    <br />

                    <div class="container">


                        <div class="panel panel-collapse">
                            <div class="panel-heading" style="background-color:  #1C2331">
                                <font color="white"> <h3 class="panel-title"> Edit User Information </h3></font>
                            </div>






                            <div class="col-sm-12">
                                <div class="form-group">

                                    <label class="col-sm-4" for="First Name">First Name :</label>

                                    <div class="col-sm-6">
                                        @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })


                                    </div>
                                </div>
                            </div>



                            <div class="col-sm-12">
                                <div class="form-group">

                                    <label class="col-sm-4" for="Middle Name">Middle Name :</label>

                                    <div class="col-sm-6">
                                        @Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>




                            <div class="col-sm-12">
                                <div class="form-group">

                                    <label class="col-sm-4" for="Last Name">Last Name :</label>


                                    <div class="col-sm-6">
                                        @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })


                                    </div>
                                </div>
                            </div>





                            <div class="col-sm-12">
                                <div class="form-group">

                                    <label class="col-sm-4" for="Bdate">Birthdate :</label>


                                    <div class="col-sm-6">
                                        @Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
                                        @Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>




                            <div class="col-sm-12">
                                <div class="form-group">

                                    <label class="col-sm-4" for="Cel">Cellphone no. :</label>



                                    <div class="col-sm-6">
                                        @Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>







                            <div class="col-sm-12">
                                <div class="form-group">

                                    <label class="col-sm-4" for="Email">Email Address :</label>



                                    <div class="col-sm-6">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>




                            <div class="col-sm-12">
                                <div class="form-group">
                                    <h2>  <label class="col-sm-4" for="Amenity Name">Module/s Included :</label> </h2>


                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.ReservationModule)
                                        @Html.ValidationMessageFor(model => model.ReservationModule, "", new { @id = "reservation", @name = "reservation", @class = "text-danger" }) <b>Reservation Module</b>
                                        <br />
                                        @Html.EditorFor(model => model.ReversalModule)
                                        @Html.ValidationMessageFor(model => model.ReversalModule, "", new { @id = "reversal", @name = "reversal", @class = "text-danger" }) <b>Reversal Module</b>
                                        <br />
                                        @Html.EditorFor(model => model.PaymentModule)
                                        @Html.ValidationMessageFor(model => model.PaymentModule, "", new { @id = "payment", @name = "payment", @class = "text-danger" }) <b>Payment Module</b>
                                        <br />
                                        @Html.EditorFor(model => model.LogBookModule)
                                        @Html.ValidationMessageFor(model => model.LogBookModule, "", new { @id = "logbook", @name = "logbook", @class = "text-danger" }) <b>LogBook Module</b>
                                        <br />
                                        @Html.EditorFor(model => model.RegistrationModule)
                                        @Html.ValidationMessageFor(model => model.RegistrationModule, "", new { @id = "logbook", @name = "logbook", @class = "text-danger" }) <b>Registration Module</b>

                                    </div>
                                </div>
                            </div>

                        </div>



                        <br />
                        <br />



                        @Html.HiddenFor(model => model.Role)

                    </div>
                </div>

            }
            else
            {
                <br />
                <br />


                <div class="container">

                    <div class="panel panel-collapse">
                        <div class="panel-heading" style="background-color:  #1C2331">
                            <font color="white"> <h3 class="panel-title"> Users Edit </h3></font>
                        </div>






                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="First Name">First Name :</label>

                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })


                                </div>
                            </div>
                        </div>






                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Middle Name">Middle Name :</label>

                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>




                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Last Name">Last Name :</label>


                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })


                                </div>
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Bdate">Birthdate :</label>


                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>





                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Cel">Cellphone no. :</label>



                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>





                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Email">Email Address :</label>



                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>



                        <div class="col-sm-12">
                            <div class="form-group">
                                <h2>  <label class="col-sm-4" for="Amenity Name">Module/s Included :</label> </h2>


                                <div class="col-sm-8">
                                    @Html.EditorFor(model => model.ReservationModule)
                                    @Html.ValidationMessageFor(model => model.ReservationModule, "", new { @id = "reservation", @name = "reservation", @class = "text-danger" }) <b>Reservation Module</b>
                                    <br />
                                    @Html.EditorFor(model => model.ReversalModule)
                                    @Html.ValidationMessageFor(model => model.ReversalModule, "", new { @id = "reversal", @name = "reversal", @class = "text-danger" }) <b>Reversal Module</b>
                                    <br />
                                    @Html.EditorFor(model => model.PaymentModule)
                                    @Html.ValidationMessageFor(model => model.PaymentModule, "", new { @id = "payment", @name = "payment", @class = "text-danger" }) <b>Payment Module</b>
                                    <br />
                                    @Html.EditorFor(model => model.LogBookModule)
                                    @Html.ValidationMessageFor(model => model.LogBookModule, "", new { @id = "logbook", @name = "logbook", @class = "text-danger" }) <b>LogBook Module</b>
                                    <br />
                                    @Html.EditorFor(model => model.RegistrationModule)
                                    @Html.ValidationMessageFor(model => model.RegistrationModule, "", new { @id = "logbook", @name = "logbook", @class = "text-danger" }) <b>Registration Module</b>

                                </div>
                            </div>
                        </div>



                    </div>
                </div>


            }



            <div class="container">
                <input type="submit" value="Save" class="button" />
                <a href="@Url.Action("AdminView","Admin")" class="button">Cancel</a>
            </div>
        </div>

<br/>

    }

</body>
</html>


<script>
	

		
	

	$("form").submit(function () {
		var reservation = document.getElementById("ReservationModule");
		var reversal = document.getElementById("ReversalModule");
		var payment = document.getElementById("PaymentModule");
		var logbook = document.getElementById("LogBookModule");
		var registration = document.getElementById("RegistrationModule");
		reservation.disabled = false;
		reversal.disabled = false;
		payment.disabled = false;
		logbook.disabled = false;
		registration.disabled = false;
	});




	$(document).ready(function () {
		var level = parseInt(@ViewBag.Level);
		if (level == 1) {
			var content1 = document.getElementById('content1');
			$('#maincontent1').append(content1);
		}

		var reservation = document.getElementById("ReservationModule");
		var reversal = document.getElementById("ReversalModule");
		var payment = document.getElementById("PaymentModule");
		var logbook = document.getElementById("LogBookModule");
		var registration = document.getElementById("RegistrationModule");
		var toa = document.getElementById("Role").value.toString();
	
		if (toa == "Finance") {

			reversal.disabled = true;
			reversal.checked = true;
			payment.disabled = true;
			payment.checked = true;
		}

		else if (toa == "Registration") {
			registration.disabled = true;
			registration.checked = true;
		}
		else if (toa == "Reservation Admin") {


			reservation.disabled = true;
			reservation.checked = true;
		}
		else if (toa == "Security Guard") {
			logbook.disabled = true;
			logbook.checked = true;
		}
		else if (toa == "OIC Security Guard") {
			logbook.disabled = true;
			logbook.checked = true;
		}
		else if (toa == "Cashier") {
			payment.disabled = true;
			payment.checked = true;
		}


	});







	

</script>