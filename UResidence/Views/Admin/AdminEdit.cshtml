@model UResidence.Admin

@{
    ViewBag.Title = "AdminEdit";
}

<h2>Admin</h2>
<div class="btn-link">

    <a href="@Url.Action("AdminView","Admin")"><input id="btnBack" type="button" value="BACK" class="btn btn-primary" /></a>

</div>
@using (Html.BeginForm("AdminEdit","Admin",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (ViewBag.updateList != null)
    {
        foreach (Admin a in ViewBag.updateList)
        {
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.AdminNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AdminNo, new { htmlAttributes = new { @class = "form-control", @Value = a.AdminNo, @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.AdminNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control", @Value = a.Fname } })
                    @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mname, new { htmlAttributes = new { @class = "form-control", @Value = a.Mname } })
                    @Html.ValidationMessageFor(model => model.Mname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lname, new { htmlAttributes = new { @class = "form-control", @Value= a.Lname } })
                    @Html.ValidationMessageFor(model => model.Lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bdate, htmlAttributes: new { @class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bdate, new { htmlAttributes = new { @class = "form-control", @Value = a.Bdate } })
                    @Html.ValidationMessageFor(model => model.Bdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CelNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CelNo, new { htmlAttributes = new { @class = "form-control", @Value = a.CelNo } })
                    @Html.ValidationMessageFor(model => model.CelNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TelNo, htmlAttributes: new { @class = "control-label col-md-2"  })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TelNo, new { htmlAttributes = new { @class = "form-control", @Value = a.TelNo } })
                    @Html.ValidationMessageFor(model => model.TelNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @Value = a.Gender } })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @Value = a.Age } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Value = a.Email } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>


        }

    }

</div>
 }



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
