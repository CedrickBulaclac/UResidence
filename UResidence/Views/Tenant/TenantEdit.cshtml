@model UResidence.TenantOwner

@{
    ViewBag.Title = "AdminView";
    if (Convert.ToInt32(Session["Level"]) == 1)
    {
        Layout = "/Views/Layout/BossManagerLayout.cshtml";
    }
    else if (Convert.ToInt32(Session["Level"]) == 0)
    {
        Layout = "/Views/Layout/SuperAdminLayout.cshtml";
    }
    else
    {
        Layout = "/Views/Layout/AdminLayout.cshtml";
    }


    List<SelectListItem> listItemsUnit = new List<SelectListItem>();
    try
    {
        foreach (var i in Model.UnitNoList)
        {

            listItemsUnit.Add(new SelectListItem
            {
                Text = i.ToString(),
                Value = i.ToString()
            });
        }
    }
    catch (Exception) { }


    List<SelectListItem> listItemsBuilding = new List<SelectListItem>();
    try
    {
        foreach (var i in Model.BuildingList)
        {

            listItemsBuilding.Add(new SelectListItem
            {
                Text = i.ToString(),
                Value = i.ToString()
            });
        }
    }
    catch (Exception) { }
}

<html>

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1">


	<style>


		label {
			padding: 12px 12px 12px 0;
			display: inline-block;
		}

		.row:after {
			content: "";
			display: table;
			clear: both;
		}

		.button {
			padding: 15px 25px;
			font-size: 15px;
			text-align: center;
			cursor: pointer;
			outline: none;
			color: #fff;
			background-color: #18ac6f;
			border: none;
			border-radius: 5px;
		}



			.button:hover {
				background-color: #46bc8b;
			}

		/*.containerAdmin {
			padding-left: 150px;
		}*/
	</style>
</head>

<body>

	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
    <div class="containerAdmin">


        @using (Html.BeginForm("TenantEdit", "Tenant", FormMethod.Post))
        {
            @Html.AntiForgeryToken()




            <div class="form-horizontal">




                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.tenant.Id)
                @Html.HiddenFor(model => model.tenant.LoginId, new { htmlAttributes = new { @class = "form-control", @required = "required" } })


                <div class="container">


                    <div class="panel panel-collapse">
                        <div class="panel-heading" style="background-color:  #1C2331">
                            <font color="white"> <h3 class="panel-title"> Update Tenant Information </h3></font>
                        </div>



                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="First Name">First Name :</label>

                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.Fname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.tenant.Fname, "", new { @class = "text-danger" })


                                </div>
                            </div>
                        </div>





                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Middle Name">Middle Name :</label>

                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.Mname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.tenant.Mname, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>







                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Last Name">Last Name :</label>


                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.Lname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.tenant.Lname, "", new { @class = "text-danger" })


                                </div>
                            </div>
                        </div>






                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Bdate">Birthdate :</label>


                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.Bdate, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
                                    @Html.ValidationMessageFor(model => model.tenant.Bdate, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>





                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Cel">Cellphone no. :</label>



                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.CelNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.tenant.CelNo, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>





                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Email">Email Address :</label>



                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.tenant.Email, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>






                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Bldg no.">Building No. :</label>



                                <div class="col-sm-6">

                                    @Html.DropDownListFor(model => model.tenant.BldgNo, listItemsBuilding, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.tenant.BldgNo, "", new { @class = "text-danger" })
                                    @Html.ValidationMessageFor(model => model.tenant.BldgNo, "", new { @class = "text-danger" })


                                </div>
                            </div>
                        </div>






                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Unit no.">Unit No. :</label>



                                <div class="col-sm-6">
                                    @*@Html.EditorFor(model => model.tenant.UnitNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })*@
                                    @Html.DropDownListFor(model => model.tenant.UnitNo, listItemsUnit, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.tenant.UnitNo, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>





                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Unit no.">Lease Start :</label>



                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.LeaseStart, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
                                    @Html.ValidationMessageFor(model => model.tenant.LeaseStart, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>








                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4" for="Unit no.">Lease End :</label>



                                <div class="col-sm-6">
                                    @Html.EditorFor(model => model.tenant.LeaseEnd, new { htmlAttributes = new { @class = "form-control", @required = "required", @max = "9999-12-31" } })
                                    @Html.ValidationMessageFor(model => model.tenant.LeaseEnd, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>









                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4">Update Moving In :</label>



                                <div class="col-sm-6">
                                    <button type="button" class="btn btn-info" id="btnUpdateImage1" name="btnUpdateImage1" data-dismiss="modal">Update Image</button>

                                </div>
                            </div>
                        </div>







                        <div class="col-sm-12">
                            <div class="form-group">

                                <label class="col-sm-4">Update Moving Out :</label>



                                <div class="col-sm-6">
                                    <button type="button" class="btn btn-info" id="btnUpdateImage2" name="btnUpdateImage2" data-dismiss="modal">Update Image</button>

                                </div>
                            </div>
                        </div>


                        @*---Modal for Update Amenity Image---*@
                        <div class="container">
                            <div class="modal fade" id="updateImageModal1" role="dialog">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        </div>
                                        <div class="modal-body">
                                            <label>Moving In: </label><input type="file" id="image1" name="image1" />
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-success" id="btnUpdate" name="btnUpdate" onclick="UpdateImage1(@Model.tenant.Id)">Update</button>
                                            <button type="button" class="btn btn-danger" id="btnCloseImage" name="btnCloseImage" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*---Modal for Update Amenity Image---*@
                        <div class="container">
                            <div class="modal fade" id="updateImageModal2" role="dialog">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        </div>
                                        <div class="modal-body">
                                            <label>Moving Out: </label><input type="file" id="image2" name="image2" />
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-success" id="btnUpdate" name="btnUpdate" onclick="UpdateImage2(@Model.tenant.Id)">Update</button>
                                            <button type="button" class="btn btn-danger" id="btnCloseImage" name="btnCloseImage" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>




                        <br />
                        <div class="pull-right">
                            <input type="submit" value="Save Changes" class="button" />
                            <a href="@Url.Action("TenantView","Tenant")" class="button">Cancel</a>

                        </div>

                    </div>
                </div>
            </div>

        }
        <br />
    </div>
</body>
</html>

<script>

	function UpdateImage1(id) {
		var tid = id;

		var file1 = $("#image1").get(0).files;
		var data = new FormData();
		data.append("Image1", file1[0]);
		data.append("Id", tid);

		$.ajax({
			type: "POST",
			url: "/Tenant/InsertMoving1/",
			data: data,
			contentType: false,
			processData: false,
			success: function (data) {
				if (data == true) {
					alert('Success');
					window.location.href = window.location.href + "?rnd=" + Math.random()

				}
			},
			error: function (error) {
				alert(error);
			}
		});
	}

	function UpdateImage2(id) {
		var tid = id;

		var file2 = $("#image2").get(0).files;
		var data = new FormData();
		data.append("Image2", file2[0]);
		data.append("Id", tid);

		$.ajax({
			type: "POST",
			url: "/Tenant/InsertMoving2/",
			data: data,
			contentType: false,
			processData: false,
			success: function (data) {
				if (data == true) {
					alert('Success');
					window.location.href = window.location.href + "?rnd=" + Math.random()

				}
			},
			error: function (error) {
				alert(error);
			}
		});
	}


	$("form").submit(function (e) {
		var leasestart = document.getElementById('tenant_LeaseStart').value
		var leaseend = document.getElementById('tenant_LeaseEnd').value

		var date1 = new Date(leasestart);
		var date2 = new Date(leaseend);
		if (date1 > date2) {
			alert("Invalid Lease Start OR Lease End");
			e.preventDefault();
		}

	});


    $(document).ready(function () {
        $('[name="tenant.Bdate"]').prop('max', function () {
            return new Date(new Date().getTime() - new Date().getTimezoneOffset() * 60000).toISOString().split("T")[0];
        });
    });

	$('#btnCloseImage').click(function () {

		$('#updateImageModal1').hide();
	}
	);

	$('#btnUpdateImage1').click(function () {

		$('#updateImageModal1').modal();
	}
	);


	$('#btnCloseImage').click(function () {

		$('#updateImageModal2').hide();
	}
	);

	$('#btnUpdateImage2').click(function () {

		$('#updateImageModal2').modal();
	}
	);
</script>
